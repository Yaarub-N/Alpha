@model AddClientForm

<section id="add-client-modal" class="modal">
    <div class="card">
        <div class="card-header">
            <h3>Add Client</h3>
            <button type="button" class="btn-close" data-type="close" data-target="#add-client-modal"></button>
        </div>
        <div class="card-body">
            <form id="add-client-form" method="post" enctype="multipart/form-data" asp-controller="Clients" asp-action="Add" data-ajax="true" novalidate>
                @Html.AntiForgeryToken()

                <div class="form-group">
                    <label asp-for="ClientName"></label>
                    <input asp-for="ClientName" class="form-input" />
                    <span asp-validation-for="ClientName" class="field-validation-error" data-valmsg-for="ClientName"></span>
                </div>

                <div class="form-group">
                    <label asp-for="Email"></label>
                    <input asp-for="Email" class="form-input" />
                    <span asp-validation-for="Email" class="field-validation-error" data-valmsg-for="Email"></span>
                </div>

                <div class="form-group">
                    <label asp-for="Phone" class="form-label"></label>
                    <input asp-for="Phone" class="form-input" />
                    <span asp-validation-for="Phone" class="field-validation-error" data-valmsg-for="Phone"></span>
                </div>

                <div class="form-group">
                    <label asp-for="Location" class="form-label"></label>
                    <input asp-for="Location" class="form-input" />
                    <span asp-validation-for="Location" class="field-validation-error "data-valmsg-for="Location"></span>
                </div>

                <button type="submit" class="btn btn-blue btn-submit">Create</button>
            </form>
        </div>
    </div>
</section>
<script>
    document.addEventListener("DOMContentLoaded", () => {
        const form = document.querySelector("#add-client-form");
        if (!form) return;

        form.addEventListener("submit", async (e) => {
            e.preventDefault();

            const formData = new FormData(form);

            const res = await fetch(form.action, {
                method: "POST",
                body: formData
            });

            const contentType = res.headers.get("content-type");

            //chat Gpt 4o

            if (!res.ok && contentType?.includes("application/json")) {
                const result = await res.json();
                if (result.errors) {
                    for (const field in result.errors) {
                        const span = form.querySelector(`span[data-valmsg-for="${field}"]`);
                        if (span) {
                            span.textContent = result.errors[field].join(", ");
                            span.style.display = "block";
                        }
                    }
                }
                return;
            }
            if (res.ok && contentType?.includes("text/html")) {
                window.location.reload();
            }
        });
    });
</script>
